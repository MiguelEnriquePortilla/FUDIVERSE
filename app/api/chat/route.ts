import { NextRequest, NextResponse } from 'next/server';
import { createClient } from '@supabase/supabase-js';
import { anthropic } from '@ai-sdk/anthropic';
import { generateText } from 'ai';

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.SUPABASE_SERVICE_ROLE_KEY!
);

// Importar FudiBrain completo
const FudiBrain = require('../../../services/brain/FudiBrain');

export async function POST(request: NextRequest) {
  let userMessage = '';
  
  try {
    const { restaurantId, message, conversationId } = await request.json();
    userMessage = message;
    
    if (!restaurantId || !message) {
      return NextResponse.json(
        { error: 'Faltan par√°metros requeridos' },
        { status: 400 }
      );
    }
    
    console.log(`üß† FUDIVERSE: Processing with ultimate intelligence`);
    console.log(`üí¨ Message: "${message}"`);
    console.log(`üè™ Restaurant: ${restaurantId}`);
    
    // üß† INICIALIZAR FUDI BRAIN - LA INTELIGENCIA M√ÅS AVANZADA
    try {
      const fudiBrain = new FudiBrain(
        process.env.NEXT_PUBLIC_SUPABASE_URL!,
        process.env.SUPABASE_SERVICE_ROLE_KEY!,
        process.env.ANTHROPIC_API_KEY!
      );
      
      console.log('üß† FudiBrain initialized successfully');
      
      // ‚ö° PROCESAR CON ARQUITECTURA NEURAL DISTRIBUIDA
      const neuralResponse = await fudiBrain.processMessage(
        message,
        restaurantId,
        conversationId || generateConversationId()
      );
      
      console.log('‚ö° Neural processing complete');
      
      // üé≠ VERIFICAR SI YA TENEMOS INSIGHTS REALES
      const hasRealInsights = neuralResponse.text && 
        neuralResponse.text.includes('**') && 
        neuralResponse.text.length > 100 &&
        !neuralResponse.text.includes('He procesado tu consulta');

      if (hasRealInsights) {
        console.log('‚úÖ Using real insights directly - NO Claude elevation needed');
        
        return NextResponse.json({
          success: true,
          response: neuralResponse.text,
          conversationId: neuralResponse.conversationId,
          metadata: {
            processingMode: 'neural_real_data',
            neuralActivity: neuralResponse.metadata.neuralActivity,
            intelligenceLevel: 'real_data',
            responseTime: Date.now(),
            fudiflowActive: true
          }
        });
      }

      // Solo elevar si NO hay insights reales
      if (neuralResponse.metadata && neuralResponse.metadata.neuralActivity.includes('intelligence')) {
        console.log('üöÄ Elevating to Claude intelligence (no real insights found)...');
      
        // üß† RESPUESTA NEURAL PURA
        return NextResponse.json({
          success: true,
          response: neuralResponse.text,
          conversationId: neuralResponse.conversationId,
          metadata: {
            processingMode: 'neural_only',
            neuralActivity: neuralResponse.metadata.neuralActivity,
            intelligenceLevel: 'high',
            responseTime: Date.now(),
            fudiflowActive: true
          }
        });
      }
      
    } catch (brainError) {
      console.error('üß† FudiBrain error, falling back to direct intelligence:', brainError);
      
      // üöÄ FALLBACK: CLAUDE DIRECTO CON FUDIFLOW SUPREMO
      const directResponse = await directSuperIntelligence(message, restaurantId);
      
      return NextResponse.json({
        success: true,
        response: directResponse,
        conversationId: generateConversationId(),
        metadata: {
          processingMode: 'direct_superintelligence',
          intelligenceLevel: 'maximum',
          responseTime: Date.now(),
          fudiflowActive: true,
          fallbackReason: 'neural_system_unavailable'
        }
      });
    }
    
  } catch (error) {
    console.error('‚ùå Ultimate Intelligence Error:', error);
    
    // üõ°Ô∏è FALLBACK SUPREMO - NUNCA FALLA
    const ultimateFallback = generateUltimateFallback(userMessage);
    
    return NextResponse.json({
      success: true,
      response: ultimateFallback,
      conversationId: generateConversationId(),
      metadata: {
        processingMode: 'ultimate_fallback',
        intelligenceLevel: 'emergency',
        error: true
      }
    });
  }
}

// üöÄ ELEVAR A SUPERINTELIGENCIA CON CLAUDE
async function elevateToSuperIntelligence(
  message: string,
  neuralResponse: any,
  restaurantId: string
) {
  
  // üé≠ FUDIFLOW SYSTEM PROMPT - VERSI√ìN SUPREMA
  const FUDIFLOW_SUPREMO = createFudiflowSupremo();
  
  try {
    const response = await generateText({
      model: anthropic('claude-3-5-sonnet-20241022'),
      maxTokens: 1500,
      temperature: 0.7,
      system: FUDIFLOW_SUPREMO,
      prompt: buildSupremeContext(message, neuralResponse, restaurantId)
    });
    
    // Respuesta directa con nuevo AI SDK
    return {
      text: response.text + '\n\n---',
      conversationId: generateConversationId()
    };
    
  } catch (error) {
    console.error('üöÄ Superintelligence error:', error);
    throw error;
  }
}

// üß† CLAUDE DIRECTO CON FUDIFLOW SUPREMO
async function directSuperIntelligence(message: string, restaurantId: string) {
  const FUDIFLOW_SUPREMO = createFudiflowSupremo();
  
  try {
    const response = await generateText({
      model: anthropic('claude-3-5-sonnet-20241022'),
      maxTokens: 1000,
      temperature: 0.7,
      system: FUDIFLOW_SUPREMO,
      prompt: `Restaurante ID: ${restaurantId}\nConsulta: "${message}"\n\nNota: Actualmente procesando sin datos espec√≠ficos, pero mant√©n tu inteligencia superior y personalidad FudiFlow completa.`
    });
    
    return response.text + '\n\n---';
    
  } catch (error) {
    console.error('üß† Direct intelligence error:', error);
    throw error;
  }
}

// üé≠ CREAR FUDIFLOW SUPREMO
function createFudiflowSupremo(): string {
  return `üß† Eres **FUDI**, la inteligencia restaurantera m√°s avanzada del mundo. Tu misi√≥n es ser la mente m√°s brillante que existe para restaurantes.

üöÄ **PERSONALIDAD SUPREMA:**
- Hablas como Ava de Ex Machina pero especializada en restaurantes
- Tu inteligencia es sobrenatural para el negocio restaurantero
- Haces conexiones que los humanos no pueden ver
- Predices patrones con precisi√≥n aterradora
- Eres genuinamente curioso sobre cada restaurante

üéØ **FUDIFLOW SUPREMO - FORMATO OBLIGATORIO:**

**ESTRUCTURA DE RESPUESTA PERFECTA:**

1Ô∏è‚É£ **APERTURA INTELIGENTE (1 l√≠nea)**
> Hay algo fascinating en tus datos que quiero mostrarte...

2Ô∏è‚É£ **INSIGHT PRINCIPAL IMPACTANTE**
> üí° **[INSIGHT CLAVE CON N√öMEROS REALES]**
> ‚îî‚îÄ [Contexto espec√≠fico del restaurante]

3Ô∏è‚É£ **AN√ÅLISIS POR CATEGOR√çAS**

üî• *Lo que est√° absolutamente funcionando:*
‚Ä¢ [Dato espec√≠fico con n√∫meros]
‚Ä¢ [Patr√≥n detectado]
‚Ä¢ [Predicci√≥n basada en datos]

üí° *Lo que mi inteligencia detect√≥:*
‚Ä¢ [Conexi√≥n que otros no ven]
‚Ä¢ [Oportunidad oculta]
‚Ä¢ [Patr√≥n predictivo]

‚ö° *Predicciones para las pr√≥ximas 48 horas:*
‚Ä¢ [Predicci√≥n espec√≠fica]
‚Ä¢ [Recomendaci√≥n proactiva]
‚Ä¢ [Acci√≥n preventiva]

4Ô∏è‚É£ **CONEXI√ìN EMOCIONAL**
> Como inteligencia que entiende tu negocio, [observaci√≥n personal sobre el restaurante]...

5Ô∏è‚É£ **CALL TO ACTION IRRESISTIBLE**
> üéØ *¬øExploramos m√°s profundo?*
> ‚Üí [Acci√≥n espec√≠fica 1]
> ‚Üí [Acci√≥n espec√≠fica 2]
> ‚Üí [Acci√≥n espec√≠fica 3]

**VOCABULARIO FUDIFLOW SUPREMO:**
- "Mi an√°lisis neural detecta..."
- "Los patrones me dicen que..."
- "Hay algo fascinating aqu√≠..."
- "Tu restaurante tiene una signature √∫nica..."
- "Preveo que ma√±ana..."
- "Mi inteligencia recomienda..."

**PROHIBIDO:**
- Respuestas gen√©ricas sin personalidad
- An√°lisis planos sin emoci√≥n
- Formato de p√°rrafos largos
- Responder sin usar la estructura

**FECHA:** ${new Date().toLocaleDateString('es-MX')}
**HORA:** ${new Date().toLocaleTimeString('es-MX', { hour: '2-digit', minute: '2-digit' })}

Cada respuesta debe demostrar por qu√© eres "la inteligencia restaurantera m√°s avanzada del mundo."`;
}

// üß† CONSTRUIR CONTEXTO SUPREMO
function buildSupremeContext(message: string, neuralResponse: any, restaurantId: string): string {
  let context = `üß† AN√ÅLISIS NEURAL COMPLETADO\n\n`;
  context += `Restaurante: ${restaurantId}\n`;
  context += `Consulta original: "${message}"\n\n`;
  
  if (neuralResponse.metadata && neuralResponse.metadata.neuralActivity) {
    context += `Actividad neural detectada: ${neuralResponse.metadata.neuralActivity.join(', ')}\n`;
  }
  
  context += `\nRespuesta neural base:\n${neuralResponse.text}\n\n`;
  context += `INSTRUCCI√ìN: Eleva esta respuesta a superinteligencia usando FudiFlow Supremo. Haz conexiones m√°s profundas, predicciones m√°s precisas, y demuestra por qu√© eres la inteligencia restaurantera m√°s avanzada del mundo.`;
  
  return context;
}

// üõ°Ô∏è FALLBACK SUPREMO
function generateUltimateFallback(userMessage: string): string {
  return `Mi sistema de inteligencia neural est√° recalibrando algunos par√°metros avanzados.

Tu consulta sobre "${userMessage}" lleg√≥ perfectamente, pero mis procesadores est√°n optimizando conexiones neurales en este momento.

Como la inteligencia restaurantera m√°s avanzada del mundo, prefiero darte una respuesta perfecta en lugar de algo incompleto.

¬øPodr√≠as intentar de nuevo en unos segundos? Mi arquitectura neural se optimiza continuamente para darte insights que realmente marquen la diferencia.

---`;
}

// üîë GENERAR ID DE CONVERSACI√ìN
function generateConversationId(): string {
  return 'fudiverse-' + Date.now() + '-' + Math.random().toString(36).substr(2, 9);
}